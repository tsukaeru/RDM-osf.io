var _ = require('js/rdmGettext')._;
var project_created = _('A user created a project');
var project_registered = _('A user registered a project');
var project_registered_no_user = _('Project registered');
var prereg_registration_initiated = _('A user submitted for review to the Preregistration Challenge a registration of a project');
var project_deleted = _('A user deleted a project');
var created_from = _('A user created a project based on a template');
var pointer_created = _('A user created a link to a project');
var pointer_forked = _('A user forked a link to a project');
var pointer_removed = _('A user removed a link to a project');
var group_added = _('A user added a group to a project');
var group_removed = _('A user removed a group from a project');
var group_updated = _('A user changed a group\'s permissions to a project');
var made_public = _('A user made a project public');
var made_public_no_user = _('Project made public');
var made_private = _('A user made a project private');
var tag_added = _('A user added a tag to a project');
var tag_removed = _('A user removed a tag from a project');
var edit_title = _('A user changed the title of a project');
var edit_description = _('A user edited the description of a project');
var category_updated = _('A user changed the category of a project');
var article_doi_updated = _('A user changed the article_doi of a project');
var updated_fields = _('A user changed the ${updated_fields} for a project');
var external_ids_added = _('A user created external identifiers on a project');
var custom_citation_added = _('A user created a custom citation for a project');
var custom_citation_edited = _('A user updated a custom citation for a project');
var custom_citation_removed = _('A user removed a custom citation from a project');
var contributor_added = _('A user added contributor(s) to a project');
var contributor_removed = _('A user removed contributor(s) from a project');
var contributors_reordered = _('A user reordered contributors for a project');
var permissions_updated = _('A user changed permissions for a project');
var made_contributor_visible = _('A user made contributor(s) visible on a project');
var made_contributor_invisible = _('A user made contributor(s) invisible on a project');
var wiki_updated = _('A user updated a wiki page of a project');
var wiki_deleted = _('A user deleted a wiki page of a project');
var wiki_renamed = _('A user renamed a wiki page of a project');
var made_wiki_public = _('A user made the wiki of a project publicly editable');
var made_wiki_private = _('A user made the wiki of a project privately editable');
var addon_added = _('A user added an addon to a project');
var addon_removed = _('A user removed an addon from a project');
var addon_file_moved = _('A user moved a file');
var addon_file_copied = _('A user copied a file');
var addon_file_renamed = _('A user renamed a file');
var folder_created = _('A user created a folder in a project');
var file_added = _('A user added a file to a project');
var file_updated = _('A user updated a file in a project');
var file_removed = _('A user removed a file from a project');
var file_restored = _('A user restored a file from a project');
var file_metadata_updated = _('A user updated the file metadata for a file');
var checked_out = _('A user checked out a file from a project');
var checked_in = _('A user checked in a file to a project');
var comment_added = _('A user added a comment to a project');
var comment_removed = _('A user deleted a comment from a project');
var comment_restored = _('A user restored a comment in a project');
var comment_updated = _('A user updated a comment on a project');
var embargo_initiated = _('A user initiated an embargoed registration of a project');
var embargo_approved = _('A user approved an embargoed registration of a project');
var embargo_approved_no_user = _('Embargo of registration of a project approved');
var embargo_cancelled = _('A user cancelled an embargoed registration of a project');
var embargo_completed = _('A user completed an embargo of a project');
var embargo_completed_no_user = _('Embargo for a project completed');
var embargo_terminated = _('Embargo for a project ended');
var retraction_initiated = _('A user initiated a withdrawal of a registration of a project');
var retraction_initiated_no_user = _('A withdrawal of a registration of a project was proposed');
var retraction_approved = _('A user approved a withdrawal of a registration of a project');
var retraction_approved_no_user = _('A withdrawal of a registration of ${node} was approved');
var retraction_cancelled = _('A user cancelled a withdrawal of a registration of a project');
var external_registration_created = _('Registration was created on an external registry.');
var external_registration_imported = _('Registration was imported to OSF from an external registry.');
var registration_initiated = _('A user initiated a registration of a project');
var registration_approved = _('A user approved a registration of a project');
var registration_approved_no_user = _('Registration of a project was approved');
var registration_cancelled = _('A user cancelled a registration of a project');
var node_created = _('A user created a project');
var node_forked = _('A user created fork from a project');
var node_removed = _('A user removed a project');
var node_access_requests_enabled = _('A user enabled access requests for a project');
var node_access_requests_disabled = _('A user disabled access requests for a project');
var license_changed = _('A user updated the license of a project');
var file_tag_added = _('A user added a tag to a file in NII Storage in a project');
var file_tag_removed = _('A user removed tag from a file in NII Storage in a project');
var osf_storage_file_added = _('A user added a file to NII Storage in a project');
var osf_storage_folder_created = _('A user created a folder in NII Storage in a project');
var osf_storage_file_updated = _('A user updated a file in NII Storage in a project');
var osf_storage_file_removed = _('A user removed a file from NII Storage in a project');
var affiliated_institution_added = _('A user added an affiliation to a project');
var affiliated_institution_removed = _('A user removed an affiliation from a project');
var preprint_initiated = _('A user made a project a preprint');
var preprint_file_updated = _('A user updated the primary file of a preprint');
var preprint_license_updated = _('A user updated the license of a preprint');
var subjects_updated = _('A user updated the subjects');
var view_only_link_added = _('A user created a view-only link to a project');
var view_only_link_removed = _('A user removed a view-only link to a project');
var box_file_added = _('A user added a file to Box in a project');
var box_file_removed = _('A user removed a file from Box in a project');
var box_file_updated = _('A user updated a file in Box in a project');
var box_folder_created = _('A user created a folder in Box in a project');
var box_folder_selected = _('A user linked a Box folder to a project');
var box_node_authorized = _('A user authorized the Box addon for a project');
var box_node_deauthorized = _('A user deauthorized the Box addon for a project');
var box_node_deauthorized_no_user = _('Box addon for a project deauthorized');
var dataverse_file_added = _('A user added a file to a Dataverse dataset in a project');
var dataverse_file_removed = _('A user removed a file from a Dataverse dataset in a project');
var dataverse_dataset_linked = _('A user linked a Dataverse dataset to a project');
var dataverse_study_linked = _('A user linked a Dataverse dataset to a project');
var dataverse_dataset_published = _('A user published a new version of a Dataverse dataset to a project');
var dataverse_study_released = _('A user published a new version of a Dataverse dataset to a project');
var dataverse_node_authorized = _('A user authorized the Dataverse addon for a project');
var dataverse_node_deauthorized = _('A user deauthorized the Dataverse addon for a project');
var dataverse_node_deauthorized_no_user = _('Dataverse addon for a project deauthorized');
var dropbox_file_added = _('A user added a file to Dropbox in a project');
var dropbox_file_removed = _('A user removed a file from Dropbox in a project');
var dropbox_file_updated = _('A user  updated a file in Dropbox in a project');
var dropbox_folder_created = _('A user created a folder in Dropbox in a project');
var dropbox_folder_selected = _('A user linked a Dropbox folder in a project');
var dropbox_node_authorized = _('A user authorized the Dropbox addon for a project');
var dropbox_node_deauthorized = _('A user deauthorized the Dropbox addon for a project');
var dropbox_node_deauthorized_no_user = _('Dropbox addon for a project deauthorized');
var figshare_folder_selected = _('A user linked content from figshare in a project');
var figshare_content_unlinked = _('A user unlinked content from figshare in a project');
var figshare_file_added = _('A user added a file to figshare in a project');
var figshare_file_removed = _('A user removed a file or folder from figshare in a project');
var figshare_folder_created = _('A user created a folder in figshare in a project');
var figshare_node_authorized = _('A user authorized the figshare addon for a project');
var figshare_node_deauthorized = _('A user deauthorized the figshare addon for a project');
var figshare_node_deauthorized_no_user = _('figshare addon for a project deauthorized');
var forward_url_changed = _('A user changed the forward URL in a project');
var github_file_added = _('A user added a file to a GitHub repo in a project');
var github_file_removed = _('A user removed a file in a GitHub repo in a project');
var github_file_updated = _('A user updated a file in a GitHub repo in a project');
var github_folder_created = _('A user created a folder in a GitHub repo in a project');
var github_node_authorized = _('A user authorized the GitHub addon for a project');
var github_node_deauthorized = _('A user deauthorized the GitHub addon for a project');
var github_node_deauthorized_no_user = _('GitHub addon for a project deauthorized');
var github_repo_linked = _('A user linked a GitHub repo in a project');
var mendeley_folder_selected = _('A user selected a folder in Mendeley in a project');
var mendeley_node_authorized = _('A user authorized the Mendeley addon for a project');
var mendeley_node_deauthorized = _('A user deauthorized the Mendeley addon for a project');
var zotero_folder_selected = _('A user linked a Zotero folder to a project');
var zotero_library_selected = _('A user linked a Zotero library to a project');
var zotero_node_authorized = _('A user authorized the Zotero addon for a project');
var zotero_node_deauthorized = _('A user deauthorized the Zotero addon for a project');
var owncloud_file_added = _('A user added a file to ownCloud in a project');
var owncloud_file_removed = _('A user removed a file from ownCloud in a project');
var owncloud_file_updated = _('A user updated a file in ownCloud in a project');
var owncloud_folder_created = _('A user created a folder in ownCloud in a project');
var owncloud_folder_selected = _('A user linked a ownCloud folder in a project');
var owncloud_node_authorized = _('A user authorized the ownCloud addon for a project');
var owncloud_node_deauthorized = _('A user deauthorized the ownCloud addon for a project');
var owncloud_node_deauthorized_no_user = _('ownCloud addon for a project deauthorized');
var onedrive_file_added = _('A user added a file to Microsoft OneDrive in a project');
var onedrive_file_removed = _('A user removed a file from Microsoft OneDrive in a project');
var onedrive_file_updated = _('A user updated a file in Microsoft OneDrive in a project');
var onedrive_folder_created = _('A user created a folder in Microsoft OneDrive in a project');
var onedrive_folder_selected = _('A user linked a Microsoft OneDrive folder to a project');
var onedrive_node_authorized = _('A user authorized the Microsoft OneDrive addon for a project');
var onedrive_node_deauthorized = _('A user deauthorized the Microsoft OneDrive addon for a project');
var onedrive_node_deauthorized_no_user = _('Microsoft OneDrive addon for a project deauthorized');
var s3_bucket_linked = _('A user linked an Amazon S3 bucket to a project');
var s3_bucket_unlinked = _('A user unselected an Amazon S3 bucket in a project');
var s3_file_added = _('A user added a file to an Amazon S3 bucket in a project');
var s3_file_removed = _('A user removed a file in an Amazon S3 bucket in a project');
var s3_file_updated = _('A user updated a file in an Amazon S3 bucket in a project');
var s3_folder_created = _('A user created a folder in an Amazon S3 in a project');
var s3_node_authorized = _('A user authorized the Amazon S3 addon for a project');
var s3_node_deauthorized = _('A user deauthorized the Amazon S3 addon for a project');
var s3_node_deauthorized_no_user = _('Amazon S3 addon for a project deauthorized');
var googledrive_file_added = _('A user added a file to Google Drive in a project');
var googledrive_file_removed = _('A user removed a file from Google Drive in a project');
var googledrive_file_updated = _('A user updated a file in Google Drive in a project');
var googledrive_folder_created = _('A user created a folder in Google Drive in a project');
var googledrive_folder_selected = _('A user linked a Google Drive folder to a project');
var googledrive_node_authorized = _('A user authorized the Google Drive addon for a project');
var googledrive_node_deauthorized = _('A user deauthorized the Google Drive addon for a project');
var googledrive_node_deauthorized_no_user = _('Google Drive addon for a project deauthorized');
var bitbucket_file_added = _('A user added a file to a Bitbucket repo in a project');
var bitbucket_file_removed = _('A user removed a file in a Bitbucket repo in a project');
var bitbucket_file_updated = _('A user updated a file in a Bitbucket repo in a project');
var bitbucket_folder_created = _('A user created a folder in a Bitbucket repo in a project');
var bitbucket_node_authorized = _('A user authorized the Bitbucket addon for a project');
var bitbucket_node_deauthorized = _('A user deauthorized the Bitbucket addon for a project');
var bitbucket_node_deauthorized_no_user = _('Bitbucket addon for a project deauthorized');
var bitbucket_repo_linked = _('A user linked a Bitbucket repo in a project');
var swift_bucket_linked = _('A user linked an Swift container to a project');
var swift_bucket_unlinked = _('A user unselected an Swift container in a project');
var swift_file_added = _('A user added a file to an Swift container in a project');
var swift_file_removed = _('A user removed a file in an Swift container in a project');
var swift_file_updated = _('A user updated a file in an Swift container in a project');
var swift_folder_created = _('A user created a folder in an Swift in a project');
var swift_node_authorized = _('A user authorized the Swift addon for a project');
var swift_node_deauthorized = _('A user deauthorized the Swift addon for a project');
var swift_node_deauthorized_no_user = _('Swift addon for a project deauthorized');
var azureblobstorage_bucket_linked = _('A user linked an Azure Blob Storage container to a project');
var azureblobstorage_bucket_unlinked = _('A user unselected an Azure Blob Storage container in a project');
var azureblobstorage_file_added = _('A user added a file to an Azure Blob Storage container in a project');
var azureblobstorage_file_removed = _('A user removed a file in an Azure Blob Storage container in a project');
var azureblobstorage_file_updated = _('A user updated a file in an Azure Blob Storage container in a project');
var azureblobstorage_folder_created = _('A user created a folder in an Azure Blob Storage in a project');
var azureblobstorage_node_authorized = _('A user authorized the Azure Blob Storage addon for a project');
var azureblobstorage_node_deauthorized = _('A user deauthorized the Azure Blob Storage addon for a project');
var azureblobstorage_node_deauthorized_no_user = _('Azure Blob Storage addon for a project deauthorized');
var weko_file_added = _('A user added a file to a WEKO index in a project');
var weko_file_removed = _('A user removed a file from a WEKO index in a project');
var weko_index_linked = _('A user linked a WEKO index to a project');
var weko_index_created = _('A user created an index to a project');
var weko_item_created = _('A user created an item to a project');
var weko_folder_created = _('A user created a folder in WEKO in a project');
var weko_node_authorized = _('A user authorized the WEKO addon for a project');
var weko_node_deauthorized = _('A user deauthorized the WEKO addon for a project');
var weko_node_deauthorized_no_user = _('WEKO addon for a project deauthorized');
var s3compat_bucket_linked = _('A user linked an S3 Compatible Storage bucket to a project');
var s3compat_bucket_unlinked = _('A user unselected an S3 Compatible Storage bucket in a project');
var s3compat_file_added = _('A user added a file to an S3 Compatible Storage bucket in a project');
var s3compat_file_removed = _('A user removed a file in an S3 Compatible Storage bucket in a project');
var s3compat_file_updated = _('A user updated a file in an S3 Compatible Storage bucket in a project');
var s3compat_folder_created = _('A user created a folder in an S3 Compatible Storage in a project');
var s3compat_node_authorized = _('A user authorized the S3 Compatible Storage addon for a project');
var s3compat_node_deauthorized = _('A user deauthorized the S3 Compatible Storage addon for a project');
var s3compat_node_deauthorized_no_user = _('S3 Compatible Storage addon for a project deauthorized');
var s3compatinstitutions_file_added = _('A user added a file to S3compat (for Institutions) in a project');
var s3compatinstitutions_file_removed = _('A user removed a file from S3compat (for Institutions) in a project');
var s3compatinstitutions_file_updated = _('A user updated a file in S3compat (for Institutions) in a project');
var s3compatinstitutions_folder_created = _('A user created a folder in S3compat (for Institutions) in a project');
var s3compatinstitutions_folder_selected = _('A user linked a S3compat (for Institutions) folder in a project');
var s3compatinstitutions_node_authorized = _('A user authorized the S3compat (for Institutions) addon for a project');
var s3compatinstitutions_node_deauthorized = _('A user deauthorized the S3compat (for Institutions) addon for a project');
var s3compatinstitutions_node_deauthorized_no_user = _('S3compat (for Institutions) addon for a project deauthorized');
var s3compatb3_bucket_linked = _('A user linked an Oracle Cloud Infrastructure Object Storage bucket to a project');
var s3compatb3_bucket_unlinked = _('A user unselected an Oracle Cloud Infrastructure Object Storage bucket in a project');
var s3compatb3_file_added = _('A user added a file to an Oracle Cloud Infrastructure Object Storage bucket in a project');
var s3compatb3_file_removed = _('A user removed a file in an Oracle Cloud Infrastructure Object Storage bucket in a project');
var s3compatb3_file_updated = _('A user updated a file in an Oracle Cloud Infrastructure Object Storage bucket in a project');
var s3compatb3_folder_created = _('A user created a folder in an Oracle Cloud Infrastructure Object Storage in a project');
var s3compatb3_node_authorized = _('A user authorized the Oracle Cloud Infrastructure Object Storage addon for a project');
var s3compatb3_node_deauthorized = _('A user deauthorized the Oracle Cloud Infrastructure Object Storage addon for a project');
var s3compatb3_node_deauthorized_no_user = _('Oracle Cloud Infrastructure Object Storage addon for a project deauthorized');
var ociinstitutions_file_added = _('A user added a file to Oracle Cloud Infrastructure (for Institutions) in a project');
var ociinstitutions_file_removed = _('A user removed a file from Oracle Cloud Infrastructure (for Institutions) in a project');
var ociinstitutions_file_updated = _('A user updated a file in Oracle Cloud Infrastructure (for Institutions) in a project');
var ociinstitutions_folder_created = _('A user created a folder in Oracle Cloud Infrastructure (for Institutions) in a project');
var ociinstitutions_folder_selected = _('A user linked a Oracle Cloud Infrastructure (for Institutions) folder in a project');
var ociinstitutions_node_authorized = _('A user authorized the Oracle Cloud Infrastructure (for Institutions) addon for a project');
var ociinstitutions_node_deauthorized = _('A user deauthorized the Oracle Cloud Infrastructure (for Institutions) addon for a project');
var ociinstitutions_node_deauthorized_no_user = _('Oracle Cloud Infrastructure (for Institutions) addon for a project deauthorized');
var nextcloud_file_added = _('A user added a file to Nextcloud in a project');
var nextcloud_file_removed = _('A user removed a file from Nextcloud in a project');
var nextcloud_file_updated = _('A user updated a file in Nextcloud in a project');
var nextcloud_folder_created = _('A user created a folder in Nextcloud in a project');
var nextcloud_folder_selected = _('A user linked a Nextcloud folder in a project');
var nextcloud_node_authorized = _('A user authorized the Nextcloud addon for a project');
var nextcloud_node_deauthorized = _('A user deauthorized the Nextcloud addon for a project');
var nextcloud_node_deauthorized_no_user = _('Nextcloud addon for a project deauthorized');
var nextcloudinstitutions_file_added = _('A user added a file to Nextcloud (for Institutions) in a project');
var nextcloudinstitutions_file_removed = _('A user removed a file from Nextcloud (for Institutions) in a project');
var nextcloudinstitutions_file_updated = _('A user updated a file in Nextcloud (for Institutions) in a project');
var nextcloudinstitutions_folder_created = _('A user created a folder in Nextcloud (for Institutions) in a project');
var nextcloudinstitutions_folder_selected = _('A user linked a Nextcloud (for Institutions) folder in a project');
var nextcloudinstitutions_node_authorized = _('A user authorized the Nextcloud (for Institutions) addon for a project');
var nextcloudinstitutions_node_deauthorized = _('A user deauthorized the Nextcloud (for Institutions) addon for a project');
var nextcloudinstitutions_node_deauthorized_no_user = _('Nextcloud (for Institutions) addon for a project deauthorized');
var iqbrims_file_added = _('A user added a file to IQB-RIMS in a project');
var iqbrims_file_removed = _('A user removed a file from IQB-RIMS in a project');
var iqbrims_file_updated = _('A user updated a file in IQB-RIMS in a project');
var iqbrims_folder_created = _('A user created a folder in IQB-RIMS in a project');
var iqbrims_folder_selected = _('A user linked a IQB-RIMS folder to a project');
var iqbrims_node_authorized = _('A user authorized the IQB-RIMS addon for a project');
var iqbrims_node_deauthorized = _('A user deauthorized the IQB-RIMS addon for a project');
var iqbrims_node_deauthorized_no_user = _('IQB-RIMS addon for a project deauthorized');
var dropboxbusiness_file_added = _('A user added a file to Dropbox Business in a project');
var dropboxbusiness_file_removed = _('A user removed a file from Dropbox Business in a project');
var dropboxbusiness_file_updated = _('A user  updated a file in Dropbox Business in a project');
var dropboxbusiness_folder_created = _('A user created a folder in Dropbox Business in a project');
var dropboxbusiness_folder_selected = _('A user linked a Dropbox Business folder in a project');
var dropboxbusiness_node_authorized = _('A user authorized the Dropbox Business addon for a project');
var dropboxbusiness_node_deauthorized = _('A user deauthorized the Dropbox Business addon for a project');
var dropboxbusiness_node_deauthorized_no_user = _('Dropbox Business addon for a project deauthorized');
var rushfiles_file_added = _("A user added a file to RushFiles in a project");
var rushfiles_file_removed = _("A user removed a file from RushFiles in a project");
var rushfiles_file_updated = _("A user updated a file in RushFiles in a project");
var rushfiles_folder_created = _("A user created a folder in RushFiles in a project");
var rushfiles_folder_selected = _("A user linked a RushFiles folder to a project");
var rushfiles_node_authorized = _("A user authorized the RushFiles addon for a project");
var rushfiles_node_deauthorized = _("A user deauthorized the RushFiles addon for a project");
var rushfiles_node_deauthorized_no_user = _("RushFiles addon for a project deauthorized");